using System;
using System.Net;
using System.Collections.Generic;
using System.Threading.Tasks;

#pragma warning disable CS1998 // disables the warning "async method lacks await operators and will run synchronously" as the main method is always async for developing purposes.

namespace HTTPMan
{
#nullable enable
    class Example
    {
        static async Task Main(string[] args)
        {
            Server server = new Server(IPAddress.Parse("127.0.0.1"), 8887, IPAddress.Parse("127.0.0.1"), 8889);

            Dictionary<string, string> mockerOptions = new() { { MockMatcher.ForHost.GetOptionsKey(), "duckduckgo.com" } };

            HttpResponse response = new HttpResponse(200, null, "<!DOCTYPE html>\n<html>\n<body>\n\n<h1>Access denied.</h1>\n<p>Network is running through a proxy.</p>\n\n</body>\n</html>", HttpContentType.TextHTML, false, 1.1);
            Dictionary<string, object> mockerActionOptions = new() { { MockAction.ReturnFixedResponse.GetOptionsKey(), response } };

            MockerRule rule1 = new MockerRule(MockHttpMethod.Any, MockMatcher.ForHost, mockerOptions, MockAction.ReturnFixedResponse, mockerActionOptions);
            server.HttpRules.Add(rule1);


            System.Console.WriteLine(server.Start());

            Console.ReadKey();

            server.Stop();
        }
    }
#nullable disable
}